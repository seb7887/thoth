// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: proto/heimdallr/heimdallr.proto

package heimdallr

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ClientIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *ClientIdRequest) Reset() {
	*x = ClientIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientIdRequest) ProtoMessage() {}

func (x *ClientIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientIdRequest.ProtoReflect.Descriptor instead.
func (*ClientIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_heimdallr_heimdallr_proto_rawDescGZIP(), []int{0}
}

func (x *ClientIdRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	JwtToken string `protobuf:"bytes,2,opt,name=jwtToken,proto3" json:"jwtToken,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_heimdallr_heimdallr_proto_rawDescGZIP(), []int{1}
}

func (x *AuthRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthRequest) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

type KeyPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateKey string `protobuf:"bytes,1,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
}

func (x *KeyPairResponse) Reset() {
	*x = KeyPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPairResponse) ProtoMessage() {}

func (x *KeyPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPairResponse.ProtoReflect.Descriptor instead.
func (*KeyPairResponse) Descriptor() ([]byte, []int) {
	return file_proto_heimdallr_heimdallr_proto_rawDescGZIP(), []int{2}
}

func (x *KeyPairResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type ResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResultResponse) Reset() {
	*x = ResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultResponse) ProtoMessage() {}

func (x *ResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultResponse.ProtoReflect.Descriptor instead.
func (*ResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_heimdallr_heimdallr_proto_rawDescGZIP(), []int{3}
}

func (x *ResultResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_proto_heimdallr_heimdallr_proto_rawDescGZIP(), []int{4}
}

type ClientIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ClientIdsResponse) Reset() {
	*x = ClientIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientIdsResponse) ProtoMessage() {}

func (x *ClientIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdallr_heimdallr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientIdsResponse.ProtoReflect.Descriptor instead.
func (*ClientIdsResponse) Descriptor() ([]byte, []int) {
	return file_proto_heimdallr_heimdallr_proto_rawDescGZIP(), []int{5}
}

func (x *ClientIdsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_proto_heimdallr_heimdallr_proto protoreflect.FileDescriptor

var file_proto_heimdallr_heimdallr_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c,
	0x72, 0x2f, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x22, 0x2d, 0x0a, 0x0f,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x0b, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x31, 0x0a, 0x0f, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x2a, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x22, 0x25, 0x0a,
	0x11, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x32, 0xc6, 0x03, 0x0a, 0x10, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c,
	0x6c, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x69, 0x6d,
	0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c,
	0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x65,
	0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x69,
	0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c,
	0x6c, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c,
	0x6c, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x13, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a,
	0x09, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_heimdallr_heimdallr_proto_rawDescOnce sync.Once
	file_proto_heimdallr_heimdallr_proto_rawDescData = file_proto_heimdallr_heimdallr_proto_rawDesc
)

func file_proto_heimdallr_heimdallr_proto_rawDescGZIP() []byte {
	file_proto_heimdallr_heimdallr_proto_rawDescOnce.Do(func() {
		file_proto_heimdallr_heimdallr_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_heimdallr_heimdallr_proto_rawDescData)
	})
	return file_proto_heimdallr_heimdallr_proto_rawDescData
}

var file_proto_heimdallr_heimdallr_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_heimdallr_heimdallr_proto_goTypes = []interface{}{
	(*ClientIdRequest)(nil),   // 0: heimdallr.ClientIdRequest
	(*AuthRequest)(nil),       // 1: heimdallr.AuthRequest
	(*KeyPairResponse)(nil),   // 2: heimdallr.KeyPairResponse
	(*ResultResponse)(nil),    // 3: heimdallr.ResultResponse
	(*EmptyReq)(nil),          // 4: heimdallr.EmptyReq
	(*ClientIdsResponse)(nil), // 5: heimdallr.ClientIdsResponse
}
var file_proto_heimdallr_heimdallr_proto_depIdxs = []int32{
	0, // 0: heimdallr.HeimdallrService.CreateClient:input_type -> heimdallr.ClientIdRequest
	1, // 1: heimdallr.HeimdallrService.Authenticate:input_type -> heimdallr.AuthRequest
	0, // 2: heimdallr.HeimdallrService.RegenerateKeys:input_type -> heimdallr.ClientIdRequest
	0, // 3: heimdallr.HeimdallrService.AddToBlacklist:input_type -> heimdallr.ClientIdRequest
	4, // 4: heimdallr.HeimdallrService.GetBlacklist:input_type -> heimdallr.EmptyReq
	0, // 5: heimdallr.HeimdallrService.DeleteClient:input_type -> heimdallr.ClientIdRequest
	2, // 6: heimdallr.HeimdallrService.CreateClient:output_type -> heimdallr.KeyPairResponse
	3, // 7: heimdallr.HeimdallrService.Authenticate:output_type -> heimdallr.ResultResponse
	2, // 8: heimdallr.HeimdallrService.RegenerateKeys:output_type -> heimdallr.KeyPairResponse
	3, // 9: heimdallr.HeimdallrService.AddToBlacklist:output_type -> heimdallr.ResultResponse
	5, // 10: heimdallr.HeimdallrService.GetBlacklist:output_type -> heimdallr.ClientIdsResponse
	3, // 11: heimdallr.HeimdallrService.DeleteClient:output_type -> heimdallr.ResultResponse
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_heimdallr_heimdallr_proto_init() }
func file_proto_heimdallr_heimdallr_proto_init() {
	if File_proto_heimdallr_heimdallr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_heimdallr_heimdallr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_heimdallr_heimdallr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_heimdallr_heimdallr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_heimdallr_heimdallr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_heimdallr_heimdallr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_heimdallr_heimdallr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_heimdallr_heimdallr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_heimdallr_heimdallr_proto_goTypes,
		DependencyIndexes: file_proto_heimdallr_heimdallr_proto_depIdxs,
		MessageInfos:      file_proto_heimdallr_heimdallr_proto_msgTypes,
	}.Build()
	File_proto_heimdallr_heimdallr_proto = out.File
	file_proto_heimdallr_heimdallr_proto_rawDesc = nil
	file_proto_heimdallr_heimdallr_proto_goTypes = nil
	file_proto_heimdallr_heimdallr_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HeimdallrServiceClient is the client API for HeimdallrService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeimdallrServiceClient interface {
	CreateClient(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*KeyPairResponse, error)
	Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*ResultResponse, error)
	RegenerateKeys(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*KeyPairResponse, error)
	AddToBlacklist(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*ResultResponse, error)
	GetBlacklist(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ClientIdsResponse, error)
	DeleteClient(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*ResultResponse, error)
}

type heimdallrServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHeimdallrServiceClient(cc grpc.ClientConnInterface) HeimdallrServiceClient {
	return &heimdallrServiceClient{cc}
}

func (c *heimdallrServiceClient) CreateClient(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*KeyPairResponse, error) {
	out := new(KeyPairResponse)
	err := c.cc.Invoke(ctx, "/heimdallr.HeimdallrService/CreateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallrServiceClient) Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := c.cc.Invoke(ctx, "/heimdallr.HeimdallrService/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallrServiceClient) RegenerateKeys(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*KeyPairResponse, error) {
	out := new(KeyPairResponse)
	err := c.cc.Invoke(ctx, "/heimdallr.HeimdallrService/RegenerateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallrServiceClient) AddToBlacklist(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := c.cc.Invoke(ctx, "/heimdallr.HeimdallrService/AddToBlacklist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallrServiceClient) GetBlacklist(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*ClientIdsResponse, error) {
	out := new(ClientIdsResponse)
	err := c.cc.Invoke(ctx, "/heimdallr.HeimdallrService/GetBlacklist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heimdallrServiceClient) DeleteClient(ctx context.Context, in *ClientIdRequest, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := c.cc.Invoke(ctx, "/heimdallr.HeimdallrService/DeleteClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeimdallrServiceServer is the server API for HeimdallrService service.
type HeimdallrServiceServer interface {
	CreateClient(context.Context, *ClientIdRequest) (*KeyPairResponse, error)
	Authenticate(context.Context, *AuthRequest) (*ResultResponse, error)
	RegenerateKeys(context.Context, *ClientIdRequest) (*KeyPairResponse, error)
	AddToBlacklist(context.Context, *ClientIdRequest) (*ResultResponse, error)
	GetBlacklist(context.Context, *EmptyReq) (*ClientIdsResponse, error)
	DeleteClient(context.Context, *ClientIdRequest) (*ResultResponse, error)
}

// UnimplementedHeimdallrServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHeimdallrServiceServer struct {
}

func (*UnimplementedHeimdallrServiceServer) CreateClient(context.Context, *ClientIdRequest) (*KeyPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClient not implemented")
}
func (*UnimplementedHeimdallrServiceServer) Authenticate(context.Context, *AuthRequest) (*ResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (*UnimplementedHeimdallrServiceServer) RegenerateKeys(context.Context, *ClientIdRequest) (*KeyPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegenerateKeys not implemented")
}
func (*UnimplementedHeimdallrServiceServer) AddToBlacklist(context.Context, *ClientIdRequest) (*ResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToBlacklist not implemented")
}
func (*UnimplementedHeimdallrServiceServer) GetBlacklist(context.Context, *EmptyReq) (*ClientIdsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlacklist not implemented")
}
func (*UnimplementedHeimdallrServiceServer) DeleteClient(context.Context, *ClientIdRequest) (*ResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClient not implemented")
}

func RegisterHeimdallrServiceServer(s *grpc.Server, srv HeimdallrServiceServer) {
	s.RegisterService(&_HeimdallrService_serviceDesc, srv)
}

func _HeimdallrService_CreateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallrServiceServer).CreateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallr.HeimdallrService/CreateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallrServiceServer).CreateClient(ctx, req.(*ClientIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HeimdallrService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallrServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallr.HeimdallrService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallrServiceServer).Authenticate(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HeimdallrService_RegenerateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallrServiceServer).RegenerateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallr.HeimdallrService/RegenerateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallrServiceServer).RegenerateKeys(ctx, req.(*ClientIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HeimdallrService_AddToBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallrServiceServer).AddToBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallr.HeimdallrService/AddToBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallrServiceServer).AddToBlacklist(ctx, req.(*ClientIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HeimdallrService_GetBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallrServiceServer).GetBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallr.HeimdallrService/GetBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallrServiceServer).GetBlacklist(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HeimdallrService_DeleteClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeimdallrServiceServer).DeleteClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallr.HeimdallrService/DeleteClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeimdallrServiceServer).DeleteClient(ctx, req.(*ClientIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HeimdallrService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "heimdallr.HeimdallrService",
	HandlerType: (*HeimdallrServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateClient",
			Handler:    _HeimdallrService_CreateClient_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _HeimdallrService_Authenticate_Handler,
		},
		{
			MethodName: "RegenerateKeys",
			Handler:    _HeimdallrService_RegenerateKeys_Handler,
		},
		{
			MethodName: "AddToBlacklist",
			Handler:    _HeimdallrService_AddToBlacklist_Handler,
		},
		{
			MethodName: "GetBlacklist",
			Handler:    _HeimdallrService_GetBlacklist_Handler,
		},
		{
			MethodName: "DeleteClient",
			Handler:    _HeimdallrService_DeleteClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/heimdallr/heimdallr.proto",
}
